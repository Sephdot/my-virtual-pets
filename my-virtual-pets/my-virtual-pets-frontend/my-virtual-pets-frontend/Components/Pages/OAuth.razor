@page "/oauth/{token}"
@using System.Security.Claims
@using my_virtual_pets_api.Entities
@inject NavigationManager Navigation
@inject AuthenticationStateProvider CustomAuth
@inject CustomAuthenticationService AuthService
@rendermode InteractiveServer


@code {

    [Parameter]
    public string token { get; set; }
    
    protected override async Task OnInitializedAsync()
    {
        var webclient = new BackendClient<OAuthToken>($"api/user/tokenexchange/{token}", CustomAuth);
            OAuthToken userToken = await webclient.GetRequest();
            
        if (userToken != null)
        {
            var identity = new ClaimsIdentity(
                [
                    new Claim(ClaimTypes.Name, userToken.Email),
                    new Claim(ClaimTypes.Hash, userToken.Token),
                    new Claim(ClaimTypes.NameIdentifier, userToken.Auth0Id.ToString())
                ],
                "Custom Authentication");
                
            var newUser = new ClaimsPrincipal(identity);
            AuthService.CurrentUser = newUser;
            Navigation.NavigateTo("/");
        } 

    }

    
}